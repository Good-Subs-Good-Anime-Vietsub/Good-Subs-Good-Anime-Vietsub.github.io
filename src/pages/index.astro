---
import { getCollection } from 'astro:content';
import simpleGit from 'simple-git';
import Layout from '../layouts/Layout.astro';
import FeaturedCard from '../components/FeaturedCard.astro';
import InteractiveHome from '../components/InteractiveHome.tsx';
import anilistCache from '../data/anilist-cache.json';
import type { AnilistCache } from '../types/anilist-cache'; // Import kiểu dữ liệu cache
import type { Project } from '../components/ProjectCard'; // Import Project

// --- Code lấy dữ liệu (giữ nguyên) ---
const git = simpleGit();
async function getFirstCommitDate(filePath: string): Promise<Date> {
  try {
    const logs = await git.log({ file: filePath, '--no-pager': null });
    const firstCommit = logs.latest;
    return firstCommit ? new Date(firstCommit.date) : new Date();
  } catch (error) {
    console.warn(`[Thông tin] File "${filePath}" chưa được commit. Sử dụng ngày hiện tại để hiển thị tạm thời.`);
    return new Date();
  }
}

const localProjects = await getCollection('projects');
const projectsWithDatePromises = localProjects.map(async (project) => {
  const filePath = `src/content/projects/${project.id}`;
  const publishDate = await getFirstCommitDate(filePath);
  return { ...project, data: { ...project.data, publishDate } };
});
const projectsWithDate = await Promise.all(projectsWithDatePromises);

// Sử dụng dữ liệu từ cache thay vì gọi API
const anilistDataMap = new Map(Object.entries(anilistCache as AnilistCache).map(([id, data]) => [parseInt(id), data]));

const allCombinedData = projectsWithDate
  .map(p => ({
    slug: p.slug,
    data: p.data,
    anilist: anilistDataMap.get(p.data.anilistId)
  }))
  .filter(p => p.anilist) as Project[]; // Ép kiểu thành Project[]
  
allCombinedData.sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

const featuredProjects = allCombinedData.filter(p => p.data.featured && p.anilist);
---
<style is:global>
  @import 'swiper/css';
  @import 'swiper/css/navigation';
  .swiper-slide { -webkit-backface-visibility: hidden; -webkit-transform: translate3d(0, 0, 0); }
  .featured-slider .swiper-button-next, .featured-slider .swiper-button-prev {
    color: theme('colors.cyan.400'); width: 28px; height: 28px; background-color: rgba(18, 24, 39, 0.6);
    border-radius: 50%; backdrop-filter: blur(4px); transition: all 0.2s ease-in-out;
  }
  .featured-slider .swiper-button-next:hover, .featured-slider .swiper-button-prev:hover {
    background-color: rgba(30, 41, 59, 0.8); color: theme('colors.white');
  }
  .featured-slider .swiper-button-next::after, .featured-slider .swiper-button-prev::after {
    font-size: 14px; font-weight: bold;
  }
</style>

<Layout 
  title="Trang chủ | GSGA Fansub"
  description="GSGA Fansub là nơi tổng hợp các bộ anime hay với phụ đề tiếng Việt chất lượng cao. Khám phá các dự án anime vietsub mới nhất, từ phim điện ảnh đến series, với trải nghiệm xem tốt nhất."
>
  <!-- Slider Featured vẫn là của Astro -->
  {featuredProjects.length > 0 && (
    <section class="mb-16 relative">
      <div class="swiper featured-slider">
        <div class="swiper-wrapper">
          {featuredProjects.map(project => (
            <div class="swiper-slide">
              <FeaturedCard project={project} />
            </div>
          ))}
        </div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </section>
  )}

  <!-- Gọi component Preact và truyền toàn bộ dữ liệu vào -->
  <InteractiveHome projects={allCombinedData} client:load />

</Layout>

<script>
  import Swiper from 'swiper';
  import { Navigation } from 'swiper/modules';
  const swiper = new Swiper('.featured-slider', {
    modules: [Navigation], loop: true, slidesPerView: 1, 
    spaceBetween: 30, centeredSlides: true,
    navigation: { nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev' },
  });
</script>
