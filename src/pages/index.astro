---
import { getCollection } from 'astro:content';
import { getCommitDates } from '../utils/git';
import Layout from '../layouts/Layout.astro';
import FeaturedCard from '../components/FeaturedCard.astro';
import InteractiveHome from '../components/InteractiveHome.tsx';
import anilistCache from '../data/anilist-cache.json';
import type { AnilistCache } from '../types/anilist-cache'; // Import kiểu dữ liệu cache
import type { Project } from '../components/ProjectCard'; // Import Project

// --- Code lấy dữ liệu (giữ nguyên) ---
// Hàm getFirstCommitDate đã được di chuyển sang src/utils/git.ts

let localProjects = await getCollection('projects');
// Sắp xếp ban đầu theo slug để đảm bảo thứ tự nhất quán
localProjects.sort((a, b) => a.slug.localeCompare(b.slug));

const projectsWithDatePromises = localProjects.map(async (project) => {
  const filePath = `src/content/projects/${project.id}`;
  const { created } = await getCommitDates(filePath);
  return { ...project, data: { ...project.data, publishDate: created } };
});
const projectsWithDate = await Promise.all(projectsWithDatePromises);

// Sử dụng dữ liệu từ cache thay vì gọi API
const anilistDataMap = new Map(
  Object.entries(anilistCache as unknown as AnilistCache).map(([id, data]) => [parseInt(id), data])
);

const allCombinedData = projectsWithDate
  .map(p => ({
    slug: p.slug,
    data: p.data,
    anilist: anilistDataMap.get(p.data.anilistId)
  }))
  .filter(p => p.anilist) as Project[]; // Ép kiểu thành Project[]

// Toàn bộ logic sắp xếp sẽ được xử lý trong InteractiveHome.tsx

// Hàm xáo trộn mảng (Fisher-Yates shuffle)
function shuffleArray<T>(array: T[]): T[] {
  const newArray = [...array];
  for (let i = newArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
  }
  return newArray;
}

const featuredProjectsRaw = allCombinedData.filter(p => p.data.featured && p.anilist);
const featuredProjects = shuffleArray(featuredProjectsRaw);
---
<style is:global>
  @import 'swiper/css';
  @import 'swiper/css/navigation';
  .swiper-slide { -webkit-backface-visibility: hidden; -webkit-transform: translate3d(0, 0, 0); }
  .featured-slider .swiper-button-next, .featured-slider .swiper-button-prev {
    color: theme('colors.cyan.400'); width: 28px; height: 28px; background-color: rgba(18, 24, 39, 0.6);
    border-radius: 50%; backdrop-filter: blur(4px); transition: all 0.2s ease-in-out;
    opacity: 0;
  }
  .featured-slider:hover .swiper-button-next,
  .featured-slider:hover .swiper-button-prev {
    opacity: 1;
  }
  .featured-slider .swiper-button-next:hover, .featured-slider .swiper-button-prev:hover {
    background-color: rgba(30, 41, 59, 0.8); color: theme('colors.white');
  }
  .featured-slider .swiper-button-next::after, .featured-slider .swiper-button-prev::after {
    font-size: 14px; font-weight: bold;
  }
</style>

<Layout 
  title="GSGA Fansub - Good Subs Good Anime | Anime hay, Phụ đề cũng phải tốt"
  description="GSGA Fansub - Anime hay, Phụ đề cũng phải tốt. Nơi tổng hợp các bộ anime hay với phụ đề tiếng Việt chất lượng cao. Khám phá các bản vietsub anime, donghua, phim từ movie đến series, với trải nghiệm xem tốt nhất."
>
  <!-- Slider Featured vẫn là của Astro -->
  {featuredProjects.length > 0 && (
    <section class="mb-16 relative">
      <div class="swiper featured-slider">
        <div class="swiper-wrapper">
          {featuredProjects.map(project => (
            <div class="swiper-slide">
              <FeaturedCard project={project} />
            </div>
          ))}
        </div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </section>
  )}

  <!-- Gọi component Preact và truyền toàn bộ dữ liệu vào -->
  <InteractiveHome projects={allCombinedData} client:load />

</Layout>

<script>
  import Swiper from 'swiper';
  import { Navigation } from 'swiper/modules';
  const swiper = new Swiper('.featured-slider', {
    modules: [Navigation], loop: true, slidesPerView: 1, 
    spaceBetween: 30, centeredSlides: true,
    navigation: { nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev' },
  });
</script>
